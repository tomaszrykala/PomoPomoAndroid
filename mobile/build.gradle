apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.hugo'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'play'
apply plugin: 'io.fabric'

Properties local_properties = new Properties()
File localPropertiesFile = project.rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    local_properties.load(localPropertiesFile.newDataInputStream())
}

def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
def buildTime = new Date().format("yyyy-MM-dd'T'HH:mm'Z'", TimeZone.getTimeZone("UTC"))

android {
    publishNonDefault true
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.vngrs.android.pomodoro"
        minSdkVersion 16
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionMajor * 10000 + rootProject.ext.versionMinor * 1000 + rootProject.ext.versionPatch * 100 + rootProject.ext.versionBuild
        versionName "${rootProject.ext.versionMajor}.${rootProject.ext.versionMinor}" + ((rootProject.ext.versionPatch != 0) ? ".${rootProject.ext.versionPatch}" : "")
        buildConfigField "String", "GIT_SHA", "\"${gitSha}\""
        buildConfigField "String", "BUILD_TIME", "\"${buildTime}\""

        resConfigs "en"
    }

    signingConfigs {
        debug {
            storeFile file("../distribution/debug.keystore")
        }

        release {
            storeFile file("../distribution/" + (local_properties.release_keystore_name ?: "debug.keystore"))
            keyAlias(local_properties.release_keystore_alias ?: "androiddebugkey")
            storePassword(local_properties.release_keystore_pwd ?: "android")
            keyPassword(local_properties.release_keystore_pwd2 ?: "android")
        }
    }

    productFlavors {
        standalone {
            applicationId "com.vngrs.android.pomodoro"
        }
        vngrs {
            applicationId "com.vngrs.android.pomodoro.internal"
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            signingConfig signingConfigs.debug
            versionNameSuffix "-debug"
        }

        release {
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), '../proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    lintOptions {
        abortOnError true

        warning 'InvalidPackage'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    dexOptions {
        // Skip pre-dexing when running on Travis CI or when disabled via -Dpre-dex=false.
        preDexLibraries = rootProject.ext.preDexEnabled && !rootProject.ext.isTravis
        javaMaxHeapSize "3g"
    }
}

play {
    serviceAccountEmail = local_properties.play_service_account ?: ''
    pk12File = file("../distribution/" + (local_properties.play_key_file ?: 'no-file.p12'))
    track = 'alpha'
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    debugCompile project(path: ':shared', configuration: 'debug')
    releaseCompile project(path: ':shared', configuration: 'release')

    standaloneWearApp project(path: ':wear', configuration: 'standaloneRelease')
    vngrsWearApp project(path: ':wear', configuration: 'vngrsRelease')

    compile 'com.android.support:appcompat-v7:22.1.0'
    compile 'com.google.android.gms:play-services-analytics:7.0.0'

    compile 'com.pnikosis:materialish-progress:1.5'
    compile 'com.jakewharton:butterknife:6.1.0'

    compile 'com.google.dagger:dagger:2.0'
    apt 'com.google.dagger:dagger-compiler:2.0'
    provided 'org.glassfish:javax.annotation:10.0-b28'

    apt 'net.simonvt.schematic:schematic-compiler:0.6.1'
    compile 'net.simonvt.schematic:schematic:0.6.1'

    // Crashlytics Kit
    compile('com.crashlytics.sdk.android:crashlytics:2.2.3@aar') {
        transitive = true
    }

    vngrsCompile 'com.squareup.okhttp:okhttp:2.3.0'
    vngrsCompile 'com.squareup.okhttp:okhttp-urlconnection:2.3.0'
    vngrsCompile 'com.squareup.okio:okio:1.3.0'
    vngrsCompile 'com.squareup.retrofit:retrofit:1.9.0'
}
